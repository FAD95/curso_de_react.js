{"version":3,"sources":["images/badge-header.svg","serviceWorker.js","components/Navbar.js","components/Layout.js","pages/Home.js","components/Badge.js","components/BadgeForm.js","pages/BadgeNew.js","components/BadgeLists.js","pages/Badges.js","pages/NotFound.js","components/RickAndMortyLists.js","pages/RickAndMorty.js","components/App.js","index.js","images/logo.svg","images/astronauts.svg","images/home-logo.svg","images/monstruos.png","images/rickandmorty.png"],"names":["module","exports","Boolean","window","location","hostname","match","Navbar","Fragment","className","to","src","logo","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","React","Component","Layout","props","children","Home","state","platziLogo","Badge","confLogo","this","firstName","lastName","jobTitle","twitter","BadgeForm","handleClick","e","console","log","handleSubmit","preventDefault","onSubmit","action","htmlFor","onChange","placeholder","name","value","formValues","required","email","onClick","BadgeNew","form","handleChange","setState","target","header","BadgesLists","listValues","map","badge","key","avatarUrl","Badges","data","timeId","setTimeout","prevProps","prevState","Props","State","clearTimeout","BadgeHero","NotFound","NotFoundImg","RickAndMortyLists","fetchCharacters","a","loading","error","fetch","nextPage","response","json","info","results","concat","cleanup","message","character","image","species","origin","color","height","width","timeout","App","basename","process","exact","path","component","RickAndMorty","container","document","getElementById","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.12d524a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/badge-header.b447eaed.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport logo from \"../images/logo.svg\";\nimport \"./styles/css/Navbars.css\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <nav className=\"Navbar navbar navbar-expand-lg navbar-dark\">\n          <Link className=\"navbar-brand\" to=\"/home\">\n            <img className=\"Navbar__brand-logo\" src={logo} alt=\"Logo\" />\n            <span className=\"font-weight-light\">Platzi</span>\n            <span className=\"font-weight-bold\">Conf</span>\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarNav\"\n            aria-controls=\"navbarNav\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/badges\">\n                  Badges\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/rickandmorty\">\n                  Rick And Morty\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from 'react';\nimport Navbar from \"./Navbar\";\n\nfunction Layout(props){\n    return(\n        <React.Fragment>\n            <Navbar/>\n            {props.children}\n        </React.Fragment>\n    )\n}\n\nexport default Layout;","import React from \"react\";\nimport \"./styles/css/homes.css\";\nimport logo from \"../images/astronauts.svg\";\nimport platziLogo from \"../images/home-logo.svg\";\nimport { Link } from \"react-router-dom\";\n\nclass Home extends React.Component {\n  state = {};\n  render() {\n    return (\n      <React.Fragment>\n        <main className=\"home\">\n          <section className=\"home__message\">\n            <img className=\"home__message--logo\" src={platziLogo} alt=\"\" />\n            <h2>Print your badges</h2>\n            <p>The easiest way to manage your conference</p>\n            <Link className=\"btn btn-primary\" to=\"/badges\">Start now</Link>\n          </section>\n\n          <img className=\"home__img\" src={logo} alt=\"\" />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport confLogo from \"../images/badge-header.svg\";\nimport \"./styles/css/Badges.css\";\n\nclass Badge extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"Badge\">\n          <header className=\"Badge__header\">\n            <img src={confLogo} alt=\"Logo de la conferencia\" />\n          </header>\n          <main>\n            <section className=\"Badge__section-name\">\n              <img\n                className=\"Badge__section-name--avatar\"\n                src=\"https://es.gravatar.com/avatar?d=identicon\"\n                alt=\"Avatar\"\n              />\n              <h1>\n                {this.props.firstName}\n                <br />\n                {this.props.lastName}\n              </h1>\n            </section>\n            <section className=\"Badge__section-info\">\n              <h3>{this.props.jobTitle}</h3>\n              <span>@{this.props.twitter}</span>\n            </section>\n          </main>\n          <footer className=\"Badge__footer\">#platziConf</footer>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Badge;\n","import React from \"react\";\n\nclass BadgeForm extends React.Component {\n  // state={\n  //   jobTitle: \"Front-end Developer\"\n  // };\n  // handleChange = e => {\n  //   this.setState({\n  //     [e.target.name]: e.target.value\n  //   });\n  // };\n  handleClick = e => {\n    console.log(\"Button clicked\");\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"Submited\");\n    console.log(this.state);\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <h1>New Attendant</h1>\n        <form onSubmit={this.handleSubmit} action=\"\">\n          <div className=\"form-group\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input\n              onChange={this.props.onChange}\n              placeholder=\"Enter your name here\"\n              id=\"firstName\"\n              className=\"form-control\"\n              name=\"firstName\"\n              type=\"text\"\n              value={this.props.formValues.firstName}\n            />\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input\n              onChange={this.props.onChange}\n              placeholder=\"Enter your last name here\"\n              id=\"lastName\"\n              className=\"form-control\"\n              name=\"lastName\"\n              type=\"text\"\n              value={this.props.formValues.lastName}\n            />\n            <label htmlFor=\"email\">Email</label>\n            <input\n              onChange={this.props.onChange}\n              placeholder=\"Enter your email here\"\n              id=\"email\"\n              className=\"form-control\"\n              name=\"email\"\n              type=\"email\"\n              required\n              value={this.props.formValues.email}\n            />\n            <label htmlFor=\"jobTitle\">Job Title</label>\n            <input\n              onChange={this.props.onChange}\n              placeholder=\"Enter your job title here\"\n              id=\"jobTitle\"\n              className=\"form-control\"\n              name=\"jobTitle\"\n              type=\"text\"\n              value={this.props.formValues.jobTitle}\n            />\n            <label htmlFor=\"twitter\">Twitter</label>\n            <input\n              onChange={this.props.onChange}\n              placeholder=\"Enter your twitter here\"\n              id=\"twitter\"\n              className=\"form-control\"\n              name=\"twitter\"\n              type=\"text\"\n              value={this.props.formValues.twitter}\n            />\n            <br />\n            <button\n              type=\"submit\"\n              onClick={this.handleClick}\n              className=\"btn btn-primary\"\n            >\n              Submit\n            </button>\n          </div>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default BadgeForm;\n","import React from \"react\";\nimport header from \"../images/badge-header.svg\";\nimport \"./styles/css/BadgesNew.css\";\nimport Badge from \"../components/Badge\";\nimport BadgeForm from \"../components/BadgeForm\";\n\nclass BadgeNew extends React.Component {\n  state = {\n    form: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      jobTitle: \"Front-end Developer\",\n      twitter: \"\"\n    }\n  };\n\n  handleChange = e => {\n    this.setState({\n      form: {\n        ...this.state.form,\n        [e.target.name]: e.target.value\n      }\n    });\n  };\n  render() {\n    return (\n      <div>\n        <main>\n          <section className=\"BadgeNew__hero\">\n            <img className=\"img-fluid\" src={header} alt=\"logo header\" />\n          </section>\n          <section className=\"container\">\n            <div className=\"row \">\n              <div className=\"col-12 col-md-6\">\n                <Badge\n                  firstName={this.state.form.firstName}\n                  lastName={this.state.form.lastName}\n                  jobTitle={this.state.form.jobTitle}\n                  twitter={this.state.form.twitter}\n                />\n              </div>\n              <div className=\"col-12 col-md-6 mt-5\">\n                <BadgeForm onChange={this.handleChange} formValues={this.state.form}/>\n              </div>\n            </div>\n          </section>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default BadgeNew;\n","import React from \"react\";\nimport \"./styles/css/BadgeLists.css\";\n\nclass BadgesLists extends React.Component {\n  state = {};\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"Badges-list\">\n          <div className=\"Badges__container\">\n            <ul className=\"list-unstyled\">\n              {this.props.listValues.map(badge => {\n                return (\n                  <li key={badge.id}>\n                    <div className=\"List-element\">\n                      <img\n                        className=\"List-element__avatar\"\n                        src={badge.avatarUrl}\n                        alt=\"\"\n                      />\n                      <section className=\"List-element__info\">\n                        <h3>\n                          {badge.firstName} {badge.lastName}\n                        </h3>\n                        <p>{badge.jobTitle}</p>\n                        <p className=\"lead List-element__info__twitter\">\n                          <span>\n                            <img\n                              className=\"List-element__info__twitter--logo\"\n                              src=\"https://images.vexels.com/media/users/3/141372/isolated/lists/bf214a095a99c9aad3922f5a3a4ce2d4-boton-redondo-de-metal-de-twitter.png\"\n                              alt=\"\"\n                            />\n                            @{badge.twitter}\n                          </span>\n                        </p>\n                      </section>\n                    </div>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default BadgesLists;\n","import React from \"react\";\nimport BadgeLists from \"../components/BadgeLists\";\nimport \"./styles/css/Badges.css\";\nimport BadgeHero from \"../images/badge-header.svg\";\nimport { Link } from \"react-router-dom\";\nclass Badges extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(\"1. Constructor()\");\n    this.state = {\n      data: []\n    };\n  }\n  componentDidMount() {\n    console.log(\"3. componentDidMount()\");\n    this.timeId = setTimeout(() => {\n      this.setState({\n        data: [\n          {\n            id: \"2de30c42-9deb-40fc-a41f-05e62b5939a7\",\n            firstName: \"Freda\",\n            lastName: \"Grady\",\n            email: \"Leann_Berge@gmail.com\",\n            jobTitle: \"LegacyBrandDirector\",\n            twitter: \"FredaGrady22221-7573\",\n            avatarUrl:\n              \"https://www.gravatar.com/avatar/f63a9c45aca0e7e7de0782a6b1dff40b?d=identicon\"\n          },\n          {\n            id: \"d00d3614-101a-44ca-b6c2-0be075aeed3d\",\n            firstName: \"Major\",\n            lastName: \"Rodriguez\",\n            email: \"Ilene66@hotmail.com\",\n            jobTitle: \"HumanResearchArchitect\",\n            twitter: \"MajorRodriguez61545\",\n            avatarUrl:\n              \"https://www.gravatar.com/avatar/d57a8be8cb9219609905da25d5f3e50a?d=identicon\"\n          },\n          {\n            id: \"63c03386-33a2-4512-9ac1-354ad7bec5e9\",\n            firstName: \"Daphney\",\n            lastName: \"Torphy\",\n            email: \"Ron61@hotmail.com\",\n            jobTitle: \"NationalMarketsOfficer\",\n            twitter: \"DaphneyTorphy96105\",\n            avatarUrl:\n              \"https://www.gravatar.com/avatar/e74e87d40e55b9ff9791c78892e55cb7?d=identicon\"\n          }\n        ]\n      });\n    }, 1);\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    console.log(\"5. componentDidUpdate()\");\n    console.log({\n      prevProps: prevProps, \n      prevState: prevState\n    });\n    console.log({\n      Props: this.props, \n      State: this.state\n    });    \n  }\n\n  componentWillUnmount(){\n    console.log(\"6. componentWillUnmount()\");\n\n    clearTimeout(this.timeId);\n    \n  }\n  render() {\n    console.log(\"2/4. render()\");\n\n    return (\n      <React.Fragment>\n        <main>\n          <section className=\"Badges\">\n            <div className=\"Badges__hero\">\n              <div className=\"Badges__container\">\n                <img className=\"Badges__logo\" src={BadgeHero} alt=\"\" />\n              </div>\n            </div>\n          </section>\n          <section className=\"Badges__container\">\n            <div className=\"Badges__buttons\">\n              <Link\n                to=\"/badges/new\"\n                className=\"Badges__buttons btn btn-primary\"\n              >\n                New Badge\n              </Link>\n            </div>\n            <BadgeLists listValues={this.state.data} />\n          </section>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Badges;\n","import React from \"react\";\nimport \"./styles/css/homes.css\";\nimport NotFoundImg from \"../images/monstruos.png\";\nimport {Link} from \"react-router-dom\";\n\nclass NotFound extends React.Component {\n  state = {};\n  render() {\n    return (\n      <React.Fragment>\n        <main className=\"home\">\n          <section className=\"home__message\">\n            <h2>404 Error</h2>\n            <p>The page you request does'nt exist</p>\n            <Link className=\"btn btn-primary\" to=\"/badge\">\n              Come Home\n            </Link>\n          </section>\n\n          <img className=\"home__img\" src={NotFoundImg} alt=\"\" />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport \"./styles/css/RickAndMortyLists.css\";\nimport { cleanup } from \"@testing-library/react\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nclass RickAndMortyLists extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nextPage: 1,\n      loading: true,\n      error: null,\n      data: {\n        results: []\n      }\n    };\n  }\n  componentDidMount() {\n    this.fetchCharacters();\n  }\n\n  fetchCharacters = async () => {\n    this.setState({ loading: true, error: null });\n    try {\n      const response = await fetch(\n        `https://rickandmortyapi.com/api/character?page=${this.state.nextPage}`\n      );\n      const data = await response.json();\n      this.setState({\n        loading: false,\n        data: {\n          info: data.info,\n          results: [].concat(this.state.data.results, data.results),\n        },\n        nextPage: this.state.nextPage +1,\n      });\n    } catch (error) {\n      this.setState({\n        loading: false,\n        error: error\n      });\n    }\n  };\n\n  componentWillUnmount() {\n    cleanup();\n  }\n  render() {\n    if (this.state.error) {\n      return `Error: ${this.error.message}`;\n    }\n    return (\n      <React.Fragment>\n        <div className=\"RickAndMorty-list\">\n          <div className=\"RickAndMorty__container\">\n            <ul className=\"list-unstyled\">\n              {this.state.data.results.map(character => {\n                return (\n                  <li key={character.id}>\n                    <div className=\"List-element\">\n                      <img\n                        className=\"List-element__avatar\"\n                        src={character.image}\n                        alt=\"Character\"\n                      />\n                      <section className=\"List-element__info\">\n                        <h3>{character.name}</h3>\n                        <p>{character.species}</p>\n                        <p>{character.origin.name}</p>\n                      </section>\n                    </div>\n                  </li>\n                );\n              })}\n            </ul>\n\n            {/* Loader */}\n            {this.state.loading && (\n              <div className=\"loader\">\n                <Loader\n                  type=\"Circles\"\n                  color=\"#00BFFF\"\n                  height={125}\n                  width={125}\n                  timeout={3000} //3 secs\n                />\n              </div>\n            )}\n\n            {/* More items button */}\n            {!this.state.loading && (\n              <div className=\"clearfix\">\n                <button\n                  onClick={()=>this.fetchCharacters()}\n                  className=\"btn btn-primary float-right\"\n                >\n                  Load More\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default RickAndMortyLists;\n","import React from \"react\";\nimport RickAndMortyLists from \"../components/RickAndMortyLists\";\nimport \"./styles/css/RickAndMorty.css\";\nimport BadgeHero from \"../images/rickandmorty.png\";\nclass Badges extends React.Component {\n   \n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"5. componentDidUpdate()\");\n  }\n\n  componentWillUnmount() {\n    console.log(\"6. componentWillUnmount()\");\n  }\n  render() {\n    console.log(\"2/4. render()\");\n\n    return (\n      <React.Fragment>\n        <main className=\"RickAndMorty\">\n          <section >\n            <div className=\"RickAndMorty__hero\">\n              <div className=\"RickAndMorty__container\">\n                <img className=\"RickAndMorty__logo\" src={BadgeHero} alt=\"\" />\n              </div>\n            </div>\n          </section>\n          <section className=\"RickAndMorty__container\">\n            <div className=\"container\"></div>\n            <RickAndMortyLists/>\n          </section>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Badges;\n","import React from \"react\";\nimport Layout from \"./Layout\";\nimport Home from \"../pages/Home\";\nimport BadgeNew from \"../pages/BadgeNew\";\nimport Badges from \"../pages/Badges\";\nimport NotFound from \"../pages/NotFound\";\nimport RickAndMorty from \"../pages/RickAndMorty\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Layout>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/badges\" component={Badges} />\n          <Route exact path=\"/badges/new\" component={BadgeNew} />\n          <Route exact path=\"/rickandmorty\" component={RickAndMorty} />\n          <Route component={NotFound} />\n        </Switch>\n      </Layout>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"./styles.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./components/App\";\n\nconst container = document.getElementById(\"root\");\n\nReactDOM.render(<App />, container);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.0026b862.svg\";","module.exports = __webpack_public_path__ + \"static/media/astronauts.71addf45.svg\";","module.exports = __webpack_public_path__ + \"static/media/home-logo.f246f5f1.svg\";","module.exports = __webpack_public_path__ + \"static/media/monstruos.ed914b75.png\";","module.exports = __webpack_public_path__ + \"static/media/rickandmorty.a3848242.png\";"],"sourceRoot":""}