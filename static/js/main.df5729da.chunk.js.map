{"version":3,"sources":["images/badge-header.svg","serviceWorker.js","components/Navbar.js","components/Layout.js","pages/Home.js","components/Gravatar.js","components/Badge.js","components/BadgeForm.js","api.js","pages/BadgeNew.js","components/BadgeLists.js","components/PageError.js","pages/Badges.js","pages/NotFound.js","components/RickAndMortyLists.js","pages/RickAndMorty.js","components/App.js","index.js","images/logo.svg","images/astronauts.svg","images/home-logo.svg","images/monstruos.png","images/rickandmorty.png"],"names":["module","exports","Boolean","window","location","hostname","match","Navbar","Fragment","className","to","src","logo","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","React","Component","Layout","props","children","Home","state","platziLogo","Gravatar","email","hash","md5","avatarurl","Badge","confLogo","this","firstName","lastName","jobTitle","twitter","BadgeForm","onSubmit","action","htmlFor","onChange","placeholder","name","value","formValues","required","onClick","handleClick","error","message","BASE_URL","delay","ms","Promise","resolve","setTimeout","randomNumber","min","max","Math","floor","random","simulateNetworkLatency","callApi","endpoint","a","options","headers","Accept","url","fetch","response","json","data","api","badges","list","create","badge","method","body","JSON","stringify","read","badgeId","update","updates","remove","BadgeNew","handleChange","e","setState","form","target","handleSubmit","preventDefault","loading","history","push","color","height","width","header","BadgesLists","listValues","length","map","key","PageError","Badges","fetchData","console","log","prevProps","prevState","Props","State","clearTimeout","timeId","BadgeHero","NotFound","NotFoundImg","RickAndMortyLists","fetchCharacters","nextPage","info","results","concat","cleanup","character","image","species","origin","App","basename","process","exact","path","component","RickAndMorty","container","document","getElementById","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.df5729da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/badge-header.b447eaed.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport logo from \"../images/logo.svg\";\nimport \"./styles/css/Navbars.css\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <nav className=\"Navbar navbar navbar-expand-lg navbar-dark\">\n          <Link className=\"navbar-brand\" to=\"/home\">\n            <img className=\"Navbar__brand-logo\" src={logo} alt=\"Logo\" />\n            <span className=\"font-weight-light\">Platzi</span>\n            <span className=\"font-weight-bold\">Conf</span>\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarNav\"\n            aria-controls=\"navbarNav\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/badges\">\n                  Badges\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/rickandmorty\">\n                  Rick And Morty\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from 'react';\nimport Navbar from \"./Navbar\";\n\nfunction Layout(props){\n    return(\n        <React.Fragment>\n            <Navbar/>\n            {props.children}\n        </React.Fragment>\n    )\n}\n\nexport default Layout;","import React from \"react\";\nimport \"./styles/css/homes.css\";\nimport logo from \"../images/astronauts.svg\";\nimport platziLogo from \"../images/home-logo.svg\";\nimport { Link } from \"react-router-dom\";\n\nclass Home extends React.Component {\n  state = {};\n  render() {\n    return (\n      <React.Fragment>\n        <main className=\"home\">\n          <section className=\"home__message\">\n            <img className=\"home__message--logo\" src={platziLogo} alt=\"\" />\n            <h2>Print your badges</h2>\n            <p>The easiest way to manage your conference</p>\n            <Link className=\"btn btn-primary\" to=\"/badges\">Start now</Link>\n          </section>\n\n          <img className=\"home__img\" src={logo} alt=\"\" />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport md5 from \"md5\";\n\nfunction Gravatar(props) {\n  const email = props.email;  \n  const hash = md5(email);\n  const avatarurl = `https://es.gravatar.com/avatar/${hash}?d=identicon`;\n  return <img className={props.className} src={avatarurl} alt={props.alt} />;\n}\n\nexport default Gravatar;\n","import React from \"react\";\nimport confLogo from \"../images/badge-header.svg\";\nimport \"./styles/css/Badges.css\";\nimport Gravatar from \"./Gravatar\";\n\nclass Badge extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"Badge\">\n          <header className=\"Badge__header\">\n            <img src={confLogo} alt=\"Logo de la conferencia\" />\n          </header>\n          <main>\n            <section className=\"Badge__section-name\">\n              <Gravatar className=\"Badge__section-name--avatar\" email={this.props.email} alt=\"Avatar\"/>\n              <h1>\n                {this.props.firstName}\n                <br />\n                {this.props.lastName}\n              </h1>\n            </section>\n            <section className=\"Badge__section-info\">\n              <h3>{this.props.jobTitle}</h3>\n              <span>@{this.props.twitter}</span>\n            </section>\n          </main>\n          <footer className=\"Badge__footer\">#platziConf</footer>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Badge;\n","import React from \"react\";\nimport \"./styles/css/BadgeForms.css\";\nclass BadgeForm extends React.Component {\n  // state={\n  //   jobTitle: \"Front-end Developer\"\n  // };\n  // handleChange = e => {\n  //   this.setState({\n  //     [e.target.name]: e.target.value\n  //   });\n  // };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"form\">\n          <h1>New Attendant</h1>\n          <form onSubmit={this.props.onSubmit} action=\"\">\n            <div className=\"form-group\">\n              <label htmlFor=\"firstName\">First Name</label>\n              <input\n                onChange={this.props.onChange}\n                placeholder=\"Enter your name here\"\n                id=\"firstName\"\n                className=\"form-control\"\n                name=\"firstName\"\n                type=\"text\"\n                value={this.props.formValues.firstName}\n              />\n              <label htmlFor=\"lastName\">Last Name</label>\n              <input\n                onChange={this.props.onChange}\n                placeholder=\"Enter your last name here\"\n                id=\"lastName\"\n                className=\"form-control\"\n                name=\"lastName\"\n                type=\"text\"\n                value={this.props.formValues.lastName}\n              />\n              <label htmlFor=\"email\">Email</label>\n              <input\n                onChange={this.props.onChange}\n                placeholder=\"Enter your email here\"\n                id=\"email\"\n                className=\"form-control\"\n                name=\"email\"\n                type=\"email\"\n                required\n                value={this.props.formValues.email}\n              />\n              <label htmlFor=\"jobTitle\">Job Title</label>\n              <input\n                onChange={this.props.onChange}\n                placeholder=\"Enter your job title here\"\n                id=\"jobTitle\"\n                className=\"form-control\"\n                name=\"jobTitle\"\n                type=\"text\"\n                value={this.props.formValues.jobTitle}\n              />\n              <label htmlFor=\"twitter\">Twitter</label>\n              <input\n                onChange={this.props.onChange}\n                placeholder=\"Enter your twitter here\"\n                id=\"twitter\"\n                className=\"form-control\"\n                name=\"twitter\"\n                type=\"text\"\n                value={this.props.formValues.twitter}\n              />\n              <br />\n              <button\n                type=\"submit\"\n                onClick={this.handleClick}\n                className=\"btn btn-primary\"\n              >\n                Submit\n              </button>\n              {this.props.error &&(\n              <p className=\"text-danger\">{this.props.error.message}</p>\n              )}\n            </div>\n          </form>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default BadgeForm;\n","const BASE_URL = 'http://localhost:3001';\n\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\nconst randomNumber = (min = 0, max = 1) =>\n  Math.floor(Math.random() * (max - min + 1)) + min;\nconst simulateNetworkLatency = (min = 30, max = 1500) =>\n  delay(randomNumber(min, max));\n\nasync function callApi(endpoint, options = {}) {\n  await simulateNetworkLatency();\n\n  options.headers = {\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n  };\n\n  const url = BASE_URL + endpoint;\n  const response = await fetch(url, options);\n  const data = await response.json();\n\n  return data;\n}\n\nconst api = {\n  badges: {\n    list() {\n      return callApi('/badges');\n    },\n    create(badge) {\n      return callApi(`/badges`, {\n        method: 'POST',\n        body: JSON.stringify(badge),\n      });\n    },\n    read(badgeId) {\n      return callApi(`/badges/${badgeId}`);\n    },\n    update(badgeId, updates) {\n      return callApi(`/badges/${badgeId}`, {\n        method: 'PUT',\n        body: JSON.stringify(updates),\n      });\n    },\n    // Lo hubiera llamado `delete`, pero `delete` es un keyword en JavaScript asi que no es buena idea :P\n    remove(badgeId) {\n      return callApi(`/badges/${badgeId}`, {\n        method: 'DELETE',\n      });\n    },\n  },\n};\n\nexport default api;\n","import React from \"react\";\nimport header from \"../images/badge-header.svg\";\nimport \"./styles/css/BadgesNew.css\";\nimport Badge from \"../components/Badge\";\nimport BadgeForm from \"../components/BadgeForm\";\nimport api from \"../api\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport \"../components/styles/css/loaders.css\";\n\nclass BadgeNew extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      error: null,\n      form: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        jobTitle: \"Front-end Developer\",\n        twitter: \"\"\n      }\n    };\n  }\n\n  handleChange = e => {\n    this.setState({\n      form: {\n        ...this.state.form,\n        [e.target.name]: e.target.value\n      }\n    });\n  };\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    this.setState({ loading: true });\n\n    try {\n      await api.badges.create(this.state.form);\n      this.setState({ loading: false });\n\n      this.props.history.push('/badges');\n    } catch (error) {\n      this.setState({ loading: false, error: error });\n    }\n  };\n  render() {\n    if (this.state.loading) {\n      return (\n        <div className=\"loader\">\n          <Loader type=\"Circles\" color=\"#00BFFF\" height={125} width={125} />\n        </div>\n      );\n    }\n    return (\n      <div>\n        <main>\n          <section className=\"BadgeNew__hero\">\n            <img className=\"img-fluid\" src={header} alt=\"logo header\" />\n          </section>\n          <section className=\"container\">\n            <div className=\"row Badge-new__container\">\n              <div className=\"col-12 col-md-6\">\n                <Badge\n                  firstName={this.state.form.firstName || \"First name\"}\n                  lastName={this.state.form.lastName || \"Last name\"}\n                  jobTitle={this.state.form.jobTitle || \"Job title\"}\n                  twitter={this.state.form.twitter || \"Twitter\"}\n                  email={this.state.form.email}\n                />\n              </div>\n              <div className=\"col-12 col-md-6 mt-5\">\n                <BadgeForm\n                  onSubmit={this.handleSubmit}\n                  onChange={this.handleChange}\n                  formValues={this.state.form}\n                  error={this.state.error}\n                />\n              </div>\n            </div>\n          </section>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default BadgeNew;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./styles/css/BadgeLists.css\";\nimport Gravatar from \"./Gravatar\";\n\nclass BadgesLists extends React.Component {\n  state = {};\n  render() {\n    if (this.props.listValues.length === 0) {\n      return (\n        <div>\n          <h3>No badges were found</h3>\n          <Link className=\"btn btn-primary\" to=\"/badges/new\">\n            Create new badge\n          </Link>\n        </div>\n      );\n    }\n    return (\n      <React.Fragment>\n        <div className=\"Badges-list\">\n          <div className=\"Badges__container\">\n            <ul className=\"list-unstyled\">\n              {this.props.listValues.map(badge => {\n                return (\n                  <li key={badge.id}>\n                    <div className=\"List-element\">\n                      <Gravatar\n                        className=\"List-element__avatar\"\n                        email={badge.email}\n                        alt=\"Avatar\"\n                      />\n\n                      <section className=\"List-element__info\">\n                        <h3>\n                          {badge.firstName} {badge.lastName}\n                        </h3>\n                        <p>{badge.jobTitle}</p>\n                        <p className=\"lead List-element__info__twitter\">\n                          <span>\n                            <img\n                              className=\"List-element__info__twitter--logo\"\n                              src=\"https://images.vexels.com/media/users/3/141372/isolated/lists/bf214a095a99c9aad3922f5a3a4ce2d4-boton-redondo-de-metal-de-twitter.png\"\n                              alt=\"\"\n                            />\n                            @{badge.twitter}\n                          </span>\n                        </p>\n                      </section>\n                    </div>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default BadgesLists;\n","import React from \"react\";\nimport \"./styles/css/PageError.css\";\n\nfunction PageError(props) {\n  return <div className=\"PageError\">👽{props.error.message}🚫</div>;\n}\n\nexport default PageError;\n","import React from \"react\";\nimport BadgeLists from \"../components/BadgeLists\";\nimport \"./styles/css/Badges.css\";\nimport \"../components/styles/css/loaders.css\";\nimport BadgeHero from \"../images/badge-header.svg\";\nimport { Link } from \"react-router-dom\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport api from \"../api\";\nimport PageError from \"../components/PageError\";\nclass Badges extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      data: [],\n      error: null\n    };\n  }\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData = async () => {\n    this.setState({ loading: true, error: null });\n\n    try {\n      const data = await api.badges.list();\n      this.setState({ loading: false, data: data });\n      console.log(data);\n      \n    } catch (error) {\n      this.setState({ loading: false, error: error });\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"5. componentDidUpdate()\");\n    console.log({\n      prevProps: prevProps,\n      prevState: prevState\n    });\n    console.log({\n      Props: this.props,\n      State: this.state\n    });\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timeId);\n  }\n\n  render() {\n    if(this.state.error){\n      return(\n        <PageError  error={this.state.error}/>\n      )\n    }\n    return (\n      <React.Fragment>\n        <main>\n          <section className=\"Badges\">\n            <div className=\"Badges__hero\">\n              <div className=\"Badges__container\">\n                <img className=\"Badges__logo\" src={BadgeHero} alt=\"\" />\n              </div>\n            </div>\n          </section>\n          <section className=\"Badges__container\">\n            <div className=\"Badges__buttons\">\n              <Link\n                to=\"/badges/new\"\n                className=\"Badges__buttons btn btn-primary\"\n              >\n                New Badge\n              </Link>\n            </div>\n            <BadgeLists listValues={this.state.data} />\n          </section>\n        </main>\n        {this.state.loading && (\n          <div className=\"loader\">\n            <Loader\n              type=\"Circles\"\n              color=\"#00BFFF\"\n              height={125}\n              width={125}\n            />\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Badges;\n","import React from \"react\";\nimport \"./styles/css/homes.css\";\nimport NotFoundImg from \"../images/monstruos.png\";\nimport {Link} from \"react-router-dom\";\n\nclass NotFound extends React.Component {\n  state = {};\n  render() {\n    return (\n      <React.Fragment>\n        <main className=\"home\">\n          <section className=\"home__message\">\n            <h2>404 Error</h2>\n            <p>The page you request does'nt exist</p>\n            <Link className=\"btn btn-primary\" to=\"/badge\">\n              Come Home\n            </Link>\n          </section>\n\n          <img className=\"home__img\" src={NotFoundImg} alt=\"\" />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport \"./styles/css/RickAndMortyLists.css\";\nimport \"./styles/css/loaders.css\";\nimport { cleanup } from \"@testing-library/react\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nclass RickAndMortyLists extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nextPage: 1,\n      loading: true,\n      error: null,\n      data: {\n        results: []\n      }\n    };\n  }\n  componentDidMount() {\n    this.fetchCharacters();\n  }\n\n  fetchCharacters = async () => {\n    this.setState({ loading: true, error: null });\n    try {\n      const response = await fetch(\n        `https://rickandmortyapi.com/api/character?page=${this.state.nextPage}`\n      );\n      const data = await response.json();\n      this.setState({\n        loading: false,\n        data: {\n          info: data.info,\n          results: [].concat(this.state.data.results, data.results)\n        },\n        nextPage: this.state.nextPage + 1\n      });\n    } catch (error) {\n      this.setState({\n        loading: false,\n        error: error\n      });\n    }\n  };\n\n  componentWillUnmount() {\n    cleanup();\n  }\n  render() {\n    if (this.state.error) {\n      return `Error: ${this.error.message}`;\n    }\n    return (\n      <React.Fragment>\n        <div className=\"RickAndMorty-list\">\n          <div className=\"RickAndMorty__container container-fluid\">\n            <div className=\"container-fluid\">\n              <ul className=\"list-unstyled row\">\n                {this.state.data.results.map(character => {\n                  return (\n                    <li className=\"col-12 col-md-4 col-lg-3 col-xl-2\" key={character.id}>\n                      <div className=\"List-element\">\n                        <img\n                          className=\"List-element__avatar\"\n                          src={character.image}\n                          alt=\"Character\"\n                        />\n                        <section className=\"List-element__info\">\n                          <h3>{character.name}</h3>\n                          <p>{character.species}</p>\n                          <p>{character.origin.name}</p>\n                        </section>\n                      </div>\n                    </li>\n                  );\n                })}\n              </ul>\n            </div>\n\n            {/* Loader */}\n            {this.state.loading && (\n              <div className=\"loader\">\n                <Loader\n                  type=\"Circles\"\n                  color=\"#00BFFF\"\n                  height={125}\n                  width={125}\n                />\n              </div>\n            )}\n\n            {/* More items button */}\n            {!this.state.loading && (\n              <div className=\"clearfix\">\n                <button\n                  onClick={() => this.fetchCharacters()}\n                  className=\"btn btn-primary float-right\"\n                >\n                  Load More\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default RickAndMortyLists;\n","import React from \"react\";\nimport RickAndMortyLists from \"../components/RickAndMortyLists\";\nimport \"./styles/css/RickAndMorty.css\";\nimport BadgeHero from \"../images/rickandmorty.png\";\nclass Badges extends React.Component {\n   \n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"5. componentDidUpdate()\");\n  }\n\n  componentWillUnmount() {\n    console.log(\"6. componentWillUnmount()\");\n  }\n  render() {\n    console.log(\"2/4. render()\");\n\n    return (\n      <React.Fragment>\n        <main className=\"RickAndMorty\">\n          <section >\n            <div className=\"RickAndMorty__hero\">\n              <div className=\"RickAndMorty__container\">\n                <img className=\"RickAndMorty__logo\" src={BadgeHero} alt=\"\" />\n              </div>\n            </div>\n          </section>\n          <section className=\"RickAndMorty__container\">\n            <div className=\"container\"></div>\n            <RickAndMortyLists/>\n          </section>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Badges;\n","import React from \"react\";\nimport Layout from \"./Layout\";\nimport Home from \"../pages/Home\";\nimport BadgeNew from \"../pages/BadgeNew\";\nimport Badges from \"../pages/Badges\";\nimport NotFound from \"../pages/NotFound\";\nimport RickAndMorty from \"../pages/RickAndMorty\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Layout>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/badges\" component={Badges} />\n          <Route exact path=\"/badges/new\" component={BadgeNew} />\n          <Route exact path=\"/rickandmorty\" component={RickAndMorty} />\n          <Route component={NotFound} />\n        </Switch>\n      </Layout>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"./styles.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./components/App\";\n\nconst container = document.getElementById(\"root\");\n\nReactDOM.render(<App />, container);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.0026b862.svg\";","module.exports = __webpack_public_path__ + \"static/media/astronauts.71addf45.svg\";","module.exports = __webpack_public_path__ + \"static/media/home-logo.f246f5f1.svg\";","module.exports = __webpack_public_path__ + \"static/media/monstruos.ed914b75.png\";","module.exports = __webpack_public_path__ + \"static/media/rickandmorty.a3848242.png\";"],"sourceRoot":""}